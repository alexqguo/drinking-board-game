!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports):"function"==typeof define&&define.amd?define(["exports"],t):t((e=e||self).drinking={})}(this,function(e){"use strict";class t{constructor(e,t,s,r){this.isMandatory=e,this.rule=t,this.coordinates=s,this.zone=r}generateCenterPosition(){const e=this.coordinates.reduce((e,t)=>({x:e.x+t.x,y:e.y+t.y}),{x:0,y:0});return e.x/=this.coordinates.length,e.y/=this.coordinates.length,e}}class s{constructor(e,t,s){this.name=e,this.type=t,this.rule=s}}var r,n,i;!function(e){e.forward="forward",e.back="back"}(r||(r={})),function(e){e.passive="passive",e.active="active"}(n||(n={})),function(e){e.custom="custom",e.self="self",e.allOthers="allOthers"}(i||(i={}));const l="TURN_START",o="LOST_TURN_START",a="ROLL_START",c="ROLL_END",u="MOVE_START",d="MOVE_END",h="RULE_TRIGGER",m="RULE_END",p="TURN_END",y=[l,a,c,u,d,h,m,p,"GAME_OVER","TURN_SKIP",o];class f{constructor(){return f.instance||(f.instance=this),this.eventHandlerMap=new Map,y.forEach(e=>{this.eventHandlerMap.set(e,[])}),f.instance}on(e,t){this.validateEvent(e),this.eventHandlerMap.get(e).push(t)}trigger(e,t){this.validateEvent(e);const s=this.eventHandlerMap.get(e);if(!s.length)return;let r=0;const n=()=>{s[++r]&&i()},i=()=>{let e=[n];t&&t.length&&(e=e.concat(t)),s[r].apply(null,e)};i()}validateEvent(e){if(!this.eventHandlerMap.has(e))throw new Error(`${e} is not a valid event`)}}const g=new f;var x=Object.freeze({TURN_START:l,LOST_TURN_START:o,ROLL_START:a,ROLL_END:c,MOVE_START:u,MOVE_END:d,RULE_TRIGGER:h,RULE_END:m,TURN_END:p,GAME_OVER:"GAME_OVER",TURN_SKIP:"TURN_SKIP",default:g});class T{constructor(e){const{displayText:t,type:s,playerTarget:r,criteria:n}=e;this.validateRequired(s),this.type=s,this.displayText=t,this.playerTarget=r,this.criteria=n}execute(e=this.end){k.modal.show(this.displayText),k.modal.disableClose(),k.modal.whenClosed(e)}end(){g.trigger(m)}selectPlayers(){const e=[];return new Promise(t=>{switch(this.playerTarget){case i.allOthers:e.push(...k.getInactivePlayers()),t(e);break;case i.custom:k.modal.requirePlayerSelection(k.getInactivePlayers()).then(e=>{t(e)});break;default:e.push(k.currentPlayer),t(e)}})}validateRequired(...e){if(e.filter(e=>null==e||""===e).length)throw new Error("TODO - alert missing fields for whatever class this is")}}const R={MoveRule:class extends T{constructor(e){super(e);const{playerTarget:t,direction:s,numSpaces:r}=e;this.validateRequired(t,s,r),this.direction=s,this.numSpaces=r}execute(e){super.execute(e),this.selectPlayers().then(e=>{const t=e[0],s=Math.max(0,t.currentTileIndex+this.numSpaces);t.teleportToTile(s),k.painter.drawPlayers(),k.modal.close()})}},DisplayRule:class extends T{constructor(e){super(e),this.validateRequired(e.displayText)}execute(e){super.execute(e),k.modal.enableClose()}},TeleportRule:class extends T{constructor(e){super(e);const{tileIndex:t}=e;this.validateRequired(t),this.tileIndex=t}execute(e){super.execute(e),k.currentPlayer.teleportToTile(this.tileIndex),k.painter.drawPlayers(),k.modal.enableClose()}},SkipTurnRule:class extends T{constructor(e){super(e);const{numTurns:t}=e;this.validateRequired(t),this.numTurns=t}execute(e){super.execute(e),k.currentPlayer.effects.skippedTurns+=this.numTurns,k.modal.enableClose()}},SpeedModifierRule:class extends T{constructor(e){super(e);const{multiplier:t,numTurns:s}=e;this.validateRequired(t,s),this.multiplier=t,this.numTurns=s}execute(e){super.execute(e),this.selectPlayers().then(e=>{e.forEach(e=>{e.effects.speedModifiers=[];for(let t=0;t<this.numTurns;t++)e.effects.speedModifiers.push(this.multiplier)}),k.modal.enableClose()})}},GameOverRule:class extends T{constructor(e){super(e)}execute(){super.execute(),k.gameOver(),k.modal.enableClose()}},ExtraTurnRule:class extends T{constructor(e){super(e)}execute(e){super.execute(e),k.currentPlayer.effects.extraTurns++,k.modal.enableClose()}},DrinkDuringLostTurnsRule:class extends T{constructor(e){super(e),this.diceRolls=e.diceRolls}execute(e){super.execute(e),k.modal.requireDiceRolls(this.diceRolls.numRequired,e=>{k.currentPlayer.effects.skippedTurns+=e[0],k.modal.enableClose()})}},ApplyMoveConditionRule:class extends T{constructor(e){super(e);const{condition:t}=e;this.validateRequired(t),this.successes=new Map,this.condition=t}execute(e){super.execute(e),this.selectPlayers().then(e=>{e.forEach(e=>{this.successes.set(e,0);const t=t=>{if(-1===this.condition.criteria.indexOf(t))return this.condition.numSuccessesRequired||(e.effects.moveCondition=null,this.successes.delete(e)),!1;const s=this.successes.get(e);return this.successes.set(e,s+1),(!this.condition.numSuccessesRequired||this.successes.get(e)>=this.condition.numSuccessesRequired)&&(e.effects.moveCondition=null,this.successes.delete(e),!0)};e.effects.moveCondition=t,this.condition.immediate&&k.modal.requireDiceRolls(1,e=>{t(e[0])})}),this.playerTarget===i.custom?k.modal.close():k.modal.enableClose()})}},DiceRollRule:class extends T{constructor(e){super(e),this.diceRolls=e.diceRolls,this.outcomeRules=[],this.diceRolls.outcomes&&this.diceRolls.outcomes.length&&this.diceRolls.outcomes.forEach(e=>{this.outcomeRules.push(v(e))}),this.diceRolls.any&&(this.any=v(this.diceRolls.any))}getOutcomeForRolls(e){let t=null;if(!this.outcomeRules&&!this.any)return null;if(this.any)for(let t=0;t<e.length;t++)if(-1!==this.any.criteria.indexOf(e[t]))return this.any;return e.forEach(e=>{this.outcomeRules.forEach(s=>{s.criteria&&s.criteria.length&&-1!==s.criteria.indexOf(e)&&(t=s)})}),t}execute(e){super.execute(e),k.modal.requireDiceRolls(this.diceRolls.numRequired,t=>{const s=this.getOutcomeForRolls(t);s?s.execute(e):k.modal.enableClose()})}},RollUntilRule:class extends T{constructor(e){super(e),this.validateRequired(e.displayText)}execute(e){super.execute(e);const t=()=>{k.modal.requireDiceRolls(1,e=>{-1!==this.criteria.indexOf(e[0])?k.modal.enableClose():t()})};t()}},ChoiceRule:class extends T{constructor(e){super(e);const{choices:t,diceRolls:s}=e;this.validateRequired(t),this.choiceRules=[],this.diceRolls=s,t&&t.length&&t.forEach(e=>{this.choiceRules.push(v(e))})}execute(e){super.execute(e),this.diceRolls&&k.modal.requireDiceRolls(this.diceRolls.numRequired,()=>{}),k.modal.requireChoice(this.choiceRules).then(e=>{e?e.execute():k.modal.enableClose()})}},SkipNextMandatoryRule:class extends T{constructor(e){super(e),this.validateRequired(e.numSpaces),this.numSpaces=e.numSpaces}execute(e){super.execute(e),k.currentPlayer.effects.mandatorySkips=this.numSpaces,k.modal.enableClose()}},ChallengeRule:class extends T{constructor(e){super(e),this.playerTarget=i.custom}execute(e){super.execute(e),this.selectPlayers().then(e=>{const t=[e[0],k.currentPlayer];k.modal.requirePlayerSelection(t,"Who won?").then(e=>{const s=e[0];t.find(e=>e!==s).effects.skippedTurns++,s.effects.extraTurns++,k.modal.close()})})}}};function v(e){const{type:t}=e;if(!R.hasOwnProperty(t))throw"Invalid rule type specified";return new R[t](e)}class P{constructor(e,r){this.imgSrc=e.imgSrc,this.tiles=e.tiles.map(e=>{const{mandatory:s,rule:r,position:n,zone:i}=e;if(!r)throw"No rule specified";return new t(s,v(r),n,i)}),this.zones=e.zones.map(e=>new s(e.name,e.type,v(e.rule))),this.players=r}}const E=30,b=20,w=12;class S{constructor(e){this.name=e.name,this.color=function(e){e=e.replace(/^#?([a-f\d])([a-f\d])([a-f\d])$/i,function(e,t,s,r){return t+t+s+s+r+r});var t=/^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(e);return t?{r:parseInt(t[1],16),g:parseInt(t[2],16),b:parseInt(t[3],16)}:null}(e.color),this.effects={extraTurns:0,skippedTurns:0,speedModifiers:[],mandatorySkips:0,moveCondition:null}}canTakeTurn(){return!(this.effects.skippedTurns>0)||(this.effects.skippedTurns--,!1)}moveToTile(e){this.moveQueue=[];for(let t=this.currentTileIndex+1;t<=e;t++)this.moveQueue.push(k.board.tiles[t].generateCenterPosition());this.currentTileIndex=e}teleportToTile(e){this.currentTileIndex=e,this.currentPos=k.board.tiles[e].generateCenterPosition()}}class C{constructor(e,t){this.canvas=e,this.ctx=t,g.on(u,this.draw.bind(this))}draw(){this.drawPlayers();const e=k.currentPlayer.currentPos.x,t=k.currentPlayer.currentPos.y,s=k.currentPlayer.moveQueue[0].x-e,r=k.currentPlayer.moveQueue[0].y-t,n=Math.sqrt(s*s+r*r);if(Math.abs(s)<w&&Math.abs(r)<w){if(k.currentPlayer.moveQueue.shift(),!k.currentPlayer.moveQueue.length)return window.cancelAnimationFrame(this.raf),void g.trigger(d);if(0===n)return void this.draw()}const i=s/n*w,l=r/n*w;k.currentPlayer.currentPos.x+=i,k.currentPlayer.currentPos.y+=l,window.scrollBy(i,l),this.raf=window.requestAnimationFrame(this.draw.bind(this))}drawPlayers(){this.ctx.clearRect(0,0,this.canvas.width,this.canvas.height),this.ctx.font=`${b}px "Open Sans"`;for(let e=0;e<k.players.length;e++){const t=k.players[e];this.ctx.fillStyle=`rgba(${t.color.r}, ${t.color.g}, ${t.color.b}, 0.7)`,this.ctx.beginPath(),this.ctx.arc(t.currentPos.x,t.currentPos.y,E,0,2*Math.PI,!0),this.ctx.closePath(),this.ctx.fill(),this.ctx.fillStyle="gray",this.ctx.fillText(t.name[0].toUpperCase(),t.currentPos.x-6,t.currentPos.y+6)}}}class q{constructor(){this.triggerId="game-modal",this.trigger=document.querySelector(`#${this.triggerId}`),this.controls=Array.from(document.querySelectorAll('label[for="game-modal"]')),this.header=document.querySelector(".modal h3"),this.content=document.querySelector(".modal .content"),this.trigger.addEventListener("change",e=>{if(!1===this.trigger.checked&&this.closeCb){const e=this.closeCb;this.closeCb=null,e()}})}show(e){this.header.innerText=k.currentPlayer.name,this.content.innerText=e,this.trigger.checked=!0}close(){this.enableClose(),this.trigger.checked=!1,this.trigger.dispatchEvent(new Event("change"))}disableClose(){this.controls.forEach(e=>{e.setAttribute("for",`${this.triggerId}__DISABLED`)})}enableClose(){this.controls.forEach(e=>{e.setAttribute("for",this.triggerId)})}requireDiceRolls(e,t){const s=[],r=document.createDocumentFragment();for(let t=0;t<e;t++)r.appendChild(document.createElement("dice-roll"));this.content.appendChild(r),Array.from(this.content.querySelectorAll("dice-roll")).forEach(r=>{r.addEventListener("roll",r=>{s.push(r.detail.roll),s.length===e&&setTimeout(()=>{t(s)},1e3)})})}requirePlayerSelection(e,t="Choose a player"){if(!e||0===e.length)return Promise.resolve([]);const s=this.addLinks(t,e.map(e=>e.name));return new Promise(t=>{Array.from(s).forEach(s=>{s.addEventListener("click",s=>{s.preventDefault();const r=e.find(e=>e.name===s.currentTarget.dataset.name);return t([r]),!1})})})}requireChoice(e){if(!e||0===e.length)return Promise.resolve(null);const t=this.addLinks("Choose an outcome",e.map(e=>e.displayText));return new Promise(s=>{Array.from(t).forEach(t=>{t.addEventListener("click",t=>{t.preventDefault();const r=e.find(e=>e.displayText===t.currentTarget.dataset.name);return s(r),!1})})})}addLinks(e,t){const s=[],r=document.createDocumentFragment(),n=document.createElement("h4");return n.innerText=e,r.appendChild(n),t.forEach(e=>{const t=document.createElement("a");t.classList.add("sm"),t.href="#",t.innerText=e,t.dataset.name=e,r.appendChild(t),r.appendChild(document.createTextNode("  ")),s.push(t)}),this.content.appendChild(r),s}whenClosed(e){this.closeCb=e}}class I{constructor(){return I.instance||(I.instance=this),g.on(o,this.startLostTurn.bind(this)),g.on(l,this.startTurn.bind(this)),g.on(p,this.endTurn.bind(this)),g.on(a,this.enableDiceRoll.bind(this)),g.on(c,this.endDiceRoll.bind(this)),g.on(d,this.endMovement.bind(this)),g.on(h,this.triggerRule.bind(this)),g.on(m,this.endRule.bind(this)),g.on(d,this.updatePlayerStatusElement.bind(this)),g.on(h,this.updatePlayerStatusElement.bind(this)),I.instance}start(e,t,s){this.turnIndex=0,this.canvas=s,this.ctx=s.getContext("2d"),this.board=new P(e,this.players),this.players=t.map(e=>new S(e)),this.diceLink=document.querySelector("#overlay dice-roll"),this.modal=new q,this.painter=new C(this.canvas,this.ctx),this.players.forEach(e=>e.teleportToTile(0)),this.playerTurns=[...this.players],this.painter.drawPlayers(),this.handleDiceRoll=this.handleDiceRoll.bind(this),document.querySelector("#skip a").addEventListener("click",e=>(e.preventDefault(),this.diceLink.removeEventListener("roll",this.handleDiceRoll),g.trigger(p),!1)),g.trigger(l)}startTurn(e){this.playerTurns.length||(this.playerTurns=[...this.players]),this.currentPlayer=this.playerTurns.shift(),this.updatePlayerStatusElement();const t=this.currentPlayer.canTakeTurn();if(window.scrollTo({top:this.currentPlayer.currentPos.y-window.outerHeight/2,left:this.currentPlayer.currentPos.x-window.outerWidth/2,behavior:"smooth"}),t){const e=this.getCurrentZone();e&&e.type===n.active?e.rule.execute(()=>{g.trigger(this.currentPlayer.canTakeTurn()?a:p)}):g.trigger(a)}else g.trigger(o)}startLostTurn(){setTimeout(()=>{g.trigger(p)},2e3)}enableDiceRoll(e){this.diceLink.reset(),this.diceLink.addEventListener("roll",this.handleDiceRoll),e()}handleDiceRoll(e){const t=e.detail.roll;g.trigger(c,[t]),this.diceLink.removeEventListener("roll",this.handleDiceRoll)}endDiceRoll(e,t){if(this.currentPlayer.effects.moveCondition){if(!this.currentPlayer.effects.moveCondition(t))return setTimeout(()=>{g.trigger(p)},2e3),void e()}if(this.currentPlayer.effects.speedModifiers.length){const e=this.currentPlayer.effects.speedModifiers.shift();t=Math.ceil(e*t)}let s=this.board.tiles.slice(this.currentPlayer.currentTileIndex+1,this.currentPlayer.currentTileIndex+1+t).findIndex(e=>e.isMandatory);this.currentPlayer.effects.mandatorySkips>0&&-1!==s&&(this.currentPlayer.effects.mandatorySkips--,s=-1);let r=-1===s?t:s+1;r>0&&(this.currentPlayer.moveToTile(this.currentPlayer.currentTileIndex+r),g.trigger(u)),e()}endMovement(e){g.trigger(h),e()}triggerRule(e){this.board.tiles[this.currentPlayer.currentTileIndex].rule.execute(),e()}endRule(e){e(),g.trigger(p)}endTurn(e){this.turnIndex++,this.currentPlayer.effects.extraTurns>0&&(this.currentPlayer.effects.extraTurns--,this.playerTurns.unshift(this.currentPlayer)),g.trigger(l),e()}gameOver(){alert(`Game over!\n\n Winner: ${this.currentPlayer.name}`)}getInactivePlayers(){return this.players.filter(e=>e!==this.currentPlayer)}getCurrentZone(){const e=this.board.tiles[this.currentPlayer.currentTileIndex];return e.zone?this.board.zones.find(t=>t.name===e.zone):null}updatePlayerStatusElement(e=(()=>{})){const t=this.getCurrentZone(),s=document.querySelector("#overlay player-status"),r=Object.assign({name:this.currentPlayer.name,effects:this.currentPlayer.effects},t&&{zoneName:t.name});s.setAttribute("data",JSON.stringify(r,(e,t)=>"function"==typeof t||t)),e()}}const k=new I;function D(e,t){return new Promise(s=>{const r=new Image;r.src=e,r.addEventListener("load",()=>{t.width=r.width,t.height=r.height,t.style.background=`url(${e})`,t.style.backgroundSize="100% 100%",s()})})}document.getElementById("add-player").addEventListener("click",e=>{e.preventDefault();const t=document.createDocumentFragment(),s=document.createElement("player-input");return t.appendChild(s),document.getElementById("player-input").appendChild(t),!1}),document.getElementById("setup").addEventListener("submit",e=>{e.preventDefault();const t=function(){const e=[],t=document.getElementById("game").value,s=Array.from(document.querySelectorAll('#player-input input[type="text"]')).filter(e=>!!e.value).map(e=>e.value),r=Array.from(document.querySelectorAll('#player-input input[type="color"]')).filter(e=>!!e.value).map(e=>e.value);return s.forEach((t,s)=>{const n=r[s]||"#000000";e.push({name:t,color:n})}),[t,e]}();if(!t[1].length||t[1].length<2)return void alert("You need at least two players to play this game");const s=t[1].map(e=>e.name);new Set(s).size<t[1].length?alert("Player names must be unique"):(!function(e,t){const s=document.getElementById("canvas"),r=`${e}/index.png`,n=`${e}/index.json`;var i;Promise.all([D(r,s),(i=n,new Promise(e=>{fetch(i).then(e=>e.json()).then(t=>e(t))}))]).then(e=>{k.start(e[1],t,s)}).catch(e=>console.error(e))}(t[0],t[1]),document.getElementById("setup").style.display="none",document.getElementById("overlay").style.display="block")}),e.Game=k,e.GameEvents=g,e.events=x,Object.defineProperty(e,"__esModule",{value:!0})});